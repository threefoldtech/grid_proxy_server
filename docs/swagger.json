{
    "swagger": "2.0",
    "info": {
        "description": "grid proxy server has the main methods to list farms, nodes, node details in the grid.",
        "title": "Grid Proxy Server API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/farms": {
            "get": {
                "description": "Get all farms on the grid from graphql, It has pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GridProxy"
                ],
                "summary": "Show farms on the grid",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max result per page",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/explorer.FarmResult"
                        }
                    }
                }
            }
        },
        "/gateways": {
            "get": {
                "description": "Get all nodes on the grid from graphql, It has pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GridProxy"
                ],
                "summary": "Show nodes on the grid",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max result per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Get nodes for specific farm",
                        "name": "farm_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/explorer.nodesResponse"
                        }
                    }
                }
            }
        },
        "/gateways/{node_id}": {
            "get": {
                "description": "Get all details for specific node hardware, capacity, DMI, hypervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GridProxy"
                ],
                "summary": "Show the details for specific node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "node_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/explorer.NodeInfo"
                        }
                    }
                }
            }
        },
        "/nodes": {
            "get": {
                "description": "Get all nodes on the grid from graphql, It has pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GridProxy"
                ],
                "summary": "Show nodes on the grid",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max result per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Get nodes for specific farm",
                        "name": "farm_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/explorer.nodesResponse"
                        }
                    }
                }
            }
        },
        "/nodes/{node_id}": {
            "get": {
                "description": "Get all details for specific node hardware, capacity, DMI, hypervisor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GridProxy"
                ],
                "summary": "Show the details for specific node",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Node ID",
                        "name": "node_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/explorer.NodeInfo"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "ping the server to check if it running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "ping the server",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/twin/{twin_id}": {
            "post": {
                "description": "submit the message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RMB"
                ],
                "summary": "submit the message",
                "parameters": [
                    {
                        "description": "rmb.Message",
                        "name": "msg",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rmbproxy.Message"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "twin id",
                        "name": "twin_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rmbproxy.MessageIdentifier"
                        }
                    }
                }
            }
        },
        "/twin/{twin_id}/{retqueue}": {
            "get": {
                "description": "Get the message result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RMB"
                ],
                "summary": "Get the message result",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "twin id",
                        "name": "twin_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "message retqueue",
                        "name": "retqueue",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rmbproxy.Message"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dmi.DMI": {
            "type": "object",
            "properties": {
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dmi.Section"
                    }
                },
                "tooling": {
                    "$ref": "#/definitions/dmi.Tooling"
                }
            }
        },
        "dmi.PropertyData": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dmi.Section": {
            "type": "object",
            "properties": {
                "handleline": {
                    "type": "string"
                },
                "subsections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dmi.SubSection"
                    }
                },
                "typenum": {
                    "type": "integer"
                },
                "typestr": {
                    "type": "string"
                }
            }
        },
        "dmi.SubSection": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/dmi.PropertyData"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dmi.Tooling": {
            "type": "object",
            "properties": {
                "aggregator": {
                    "type": "string"
                },
                "decoder": {
                    "type": "string"
                }
            }
        },
        "explorer.FarmResult": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/explorer.farmData"
                }
            }
        },
        "explorer.NodeInfo": {
            "type": "object",
            "properties": {
                "capacity": {
                    "$ref": "#/definitions/explorer.capacityResult"
                },
                "dmi": {
                    "$ref": "#/definitions/dmi.DMI"
                },
                "hypervisor": {
                    "type": "string"
                }
            }
        },
        "explorer.capacityResult": {
            "type": "object",
            "properties": {
                "total": {
                    "$ref": "#/definitions/gridtypes.Capacity"
                },
                "used": {
                    "$ref": "#/definitions/gridtypes.Capacity"
                }
            }
        },
        "explorer.farm": {
            "type": "object",
            "properties": {
                "farmId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pricingPolicyId": {
                    "type": "integer"
                },
                "stellarAddress": {
                    "type": "string"
                },
                "twinId": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "explorer.farmData": {
            "type": "object",
            "properties": {
                "farms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/explorer.farm"
                    }
                },
                "publicIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/explorer.publicIP"
                    }
                }
            }
        },
        "explorer.node": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created": {
                    "type": "integer"
                },
                "cru": {
                    "type": "string"
                },
                "farmId": {
                    "type": "integer"
                },
                "farmingPolicyId": {
                    "type": "integer"
                },
                "gridVersion": {
                    "type": "integer"
                },
                "hru": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mru": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "integer"
                },
                "publicConfig": {
                    "$ref": "#/definitions/explorer.publicConfig"
                },
                "sru": {
                    "type": "string"
                },
                "status": {
                    "description": "added node status field for up or down",
                    "type": "string"
                },
                "twinId": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "explorer.nodes": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/explorer.node"
                    }
                }
            }
        },
        "explorer.nodesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/explorer.nodes"
                }
            }
        },
        "explorer.publicConfig": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "gw4": {
                    "type": "string"
                },
                "gw6": {
                    "type": "string"
                },
                "ipv4": {
                    "type": "string"
                },
                "ipv6": {
                    "type": "string"
                }
            }
        },
        "explorer.publicIP": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "integer"
                },
                "farmId": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                }
            }
        },
        "gridtypes.Capacity": {
            "type": "object",
            "properties": {
                "cru": {
                    "type": "integer"
                },
                "hru": {
                    "type": "integer"
                },
                "ipv4u": {
                    "type": "integer"
                },
                "mru": {
                    "type": "integer"
                },
                "sru": {
                    "type": "integer"
                }
            }
        },
        "rmbproxy.Message": {
            "type": "object",
            "properties": {
                "cmd": {
                    "type": "string",
                    "example": "zos.statistics.get"
                },
                "dat": {
                    "type": "string"
                },
                "dst": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "err": {
                    "type": "string"
                },
                "exp": {
                    "type": "integer",
                    "example": 0
                },
                "now": {
                    "type": "integer",
                    "example": 1631078674
                },
                "ret": {
                    "type": "string"
                },
                "shm": {
                    "type": "string"
                },
                "src": {
                    "type": "integer",
                    "example": 1
                },
                "try": {
                    "type": "integer",
                    "example": 2
                },
                "uid": {
                    "type": "string"
                },
                "ver": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "rmbproxy.MessageIdentifier": {
            "type": "object",
            "properties": {
                "retqueue": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                }
            }
        }
    }
}