basePath: /
definitions:
  db.Counters:
    properties:
      accessNodes:
        type: integer
      contracts:
        type: integer
      countries:
        type: integer
      farms:
        type: integer
      gateways:
        type: integer
      nodes:
        type: integer
      publicIps:
        type: integer
      totalCru:
        type: integer
      totalHru:
        type: integer
      totalMru:
        type: integer
      totalSru:
        type: integer
      twins:
        type: integer
    type: object
  db.Farm:
    properties:
      farmId:
        type: integer
      name:
        type: string
      pricingPolicyId:
        type: integer
      publicIps:
        items:
          $ref: '#/definitions/db.PublicIP'
        type: array
      stellarAddress:
        type: string
      twinId:
        type: integer
      version:
        type: integer
    type: object
  db.PublicConfig:
    properties:
      domain:
        type: string
      gw4:
        type: string
      gw6:
        type: string
      ipv4:
        type: string
      ipv6:
        type: string
    type: object
  db.PublicIP:
    properties:
      contractId:
        type: integer
      farmId:
        type: string
      gateway:
        type: string
      id:
        type: string
      ip:
        type: string
    type: object
  explorer.location:
    properties:
      city:
        type: string
      country:
        type: string
    type: object
  explorer.node:
    properties:
      certificationType:
        type: string
      city:
        type: string
      country:
        type: string
      created:
        type: integer
      farmId:
        type: integer
      farmingPolicyId:
        type: integer
      gridVersion:
        type: integer
      hypervisor:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/explorer.location'
      nodeId:
        type: integer
      proxyUpdatedAt:
        type: integer
      publicConfig:
        $ref: '#/definitions/db.PublicConfig'
      status:
        description: added node status field for up or down
        type: string
      total_resources:
        $ref: '#/definitions/gridtypes.Capacity'
      twinId:
        type: integer
      updatedAt:
        type: string
      uptime:
        type: integer
      used_resources:
        $ref: '#/definitions/gridtypes.Capacity'
      version:
        type: integer
      zosVersion:
        type: string
    type: object
  gridtypes.Capacity:
    properties:
      cru:
        type: integer
      hru:
        type: integer
      ipv4u:
        type: integer
      mru:
        type: integer
      sru:
        type: integer
    type: object
  rmbproxy.Message:
    properties:
      cmd:
        example: zos.statistics.get
        type: string
      dat:
        type: string
      dst:
        items:
          type: integer
        type: array
      err:
        type: string
      exp:
        example: 0
        type: integer
      now:
        example: 1631078674
        type: integer
      ret:
        type: string
      shm:
        type: string
      src:
        example: 1
        type: integer
      try:
        example: 2
        type: integer
      uid:
        type: string
      ver:
        example: 1
        type: integer
    type: object
  rmbproxy.MessageIdentifier:
    properties:
      retqueue:
        example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        type: string
    type: object
info:
  contact: {}
  description: grid proxy server has the main methods to list farms, nodes, node details
    in the grid.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Grid Proxy Server API
  version: "1.0"
paths:
  /farms:
    get:
      consumes:
      - application/json
      description: Get all farms on the grid, It has pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Max result per page
        in: query
        name: size
        type: integer
      - description: Min number of free ips in the farm
        in: query
        name: free_ips
        type: integer
      - description: Pricing policy id
        in: query
        name: pricing_policy_id
        type: integer
      - description: farm version
        in: query
        name: version
        type: integer
      - description: farm id
        in: query
        name: farm_id
        type: integer
      - description: twin id associated with the farm
        in: query
        name: twin_id
        type: integer
      - description: farm name
        in: query
        name: name
        type: string
      - description: farm stellar_address
        in: query
        name: stellar_address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Farm'
            type: array
      summary: Show farms on the grid
      tags:
      - GridProxy
  /gateways:
    get:
      consumes:
      - application/json
      description: Get all nodes on the grid, It has pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Max result per page
        in: query
        name: size
        type: integer
      - description: Min free reservable mru in bytes
        in: query
        name: free_mru
        type: integer
      - description: Min free reservable hru in bytes
        in: query
        name: free_hru
        type: integer
      - description: Min free reservable sru in bytes
        in: query
        name: free_sru
        type: integer
      - description: Min number of free ips in the farm of the node
        in: query
        name: free_ips
        type: integer
      - description: Node status filter, up/down.
        in: query
        name: status
        type: string
      - description: Node city filter
        in: query
        name: city
        type: string
      - description: Node country filter
        in: query
        name: country
        type: string
      - description: Get nodes for specific farm
        in: query
        name: farm_name
        type: string
      - description: Set to true to filter nodes with ipv4
        in: query
        name: ipv4
        type: string
      - description: Set to true to filter nodes with ipv6
        in: query
        name: ipv6
        type: string
      - description: Set to true to filter nodes with domain
        in: query
        name: domain
        type: string
      - description: List of farms separated by comma to fetch nodes from (e.g. '1,2,3')
        in: query
        name: farm_ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/explorer.node'
            type: array
      summary: Show nodes on the grid
      tags:
      - GridProxy
  /gateways/{node_id}:
    get:
      consumes:
      - application/json
      description: Get all details for specific node hardware, capacity, DMI, hypervisor
      parameters:
      - description: Node ID
        in: path
        name: node_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/explorer.node'
      summary: Show the details for specific node
      tags:
      - GridProxy
  /nodes:
    get:
      consumes:
      - application/json
      description: Get all nodes on the grid, It has pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Max result per page
        in: query
        name: size
        type: integer
      - description: Min free reservable mru in bytes
        in: query
        name: free_mru
        type: integer
      - description: Min free reservable hru in bytes
        in: query
        name: free_hru
        type: integer
      - description: Min free reservable sru in bytes
        in: query
        name: free_sru
        type: integer
      - description: Min number of free ips in the farm of the node
        in: query
        name: free_ips
        type: integer
      - description: Node status filter, up/down.
        in: query
        name: status
        type: string
      - description: Node city filter
        in: query
        name: city
        type: string
      - description: Node country filter
        in: query
        name: country
        type: string
      - description: Get nodes for specific farm
        in: query
        name: farm_name
        type: string
      - description: Set to true to filter nodes with ipv4
        in: query
        name: ipv4
        type: string
      - description: Set to true to filter nodes with ipv6
        in: query
        name: ipv6
        type: string
      - description: Set to true to filter nodes with domain
        in: query
        name: domain
        type: string
      - description: List of farms separated by comma to fetch nodes from (e.g. '1,2,3')
        in: query
        name: farm_ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/explorer.node'
            type: array
      summary: Show nodes on the grid
      tags:
      - GridProxy
  /nodes/{node_id}:
    get:
      consumes:
      - application/json
      description: Get all details for specific node hardware, capacity, DMI, hypervisor
      parameters:
      - description: Node ID
        in: path
        name: node_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/explorer.node'
      summary: Show the details for specific node
      tags:
      - GridProxy
  /ping:
    get:
      consumes:
      - application/json
      description: ping the server to check if it running
      produces:
      - application/json
      responses:
        "200":
          description: pong
          schema:
            type: string
      summary: ping the server
      tags:
      - ping
  /stats:
    get:
      consumes:
      - application/json
      description: Get statistics about the grid
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Counters'
            type: array
      summary: Show stats about the grid
      tags:
      - GridProxy
  /twin/{twin_id}:
    post:
      consumes:
      - application/json
      description: submit the message
      parameters:
      - description: rmb.Message
        in: body
        name: msg
        required: true
        schema:
          $ref: '#/definitions/rmbproxy.Message'
      - description: twin id
        in: path
        name: twin_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rmbproxy.MessageIdentifier'
      summary: submit the message
      tags:
      - RMB
  /twin/{twin_id}/{retqueue}:
    get:
      consumes:
      - application/json
      description: Get the message result
      parameters:
      - description: twin id
        in: path
        name: twin_id
        required: true
        type: integer
      - description: message retqueue
        in: path
        name: retqueue
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rmbproxy.Message'
            type: array
      summary: Get the message result
      tags:
      - RMB
swagger: "2.0"
